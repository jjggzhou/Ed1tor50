/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <input/processors.dtsi>
#include "Ed1tor50-layouts.dtsi"
#include <dt-bindings/led/led.h>


&physical_layout0 {
    transform = <&matrix_transform>;
};

/ {
    chosen {
        zmk,kscan = &kscan0;
		zmk,underglow = &led_strip;
		zmk,physical-layout = &physical_layout0;
    };

    xiao_d: connector {
        compatible = "seeed,xiao-gpio";
        #gpio-cells = <2>;
        gpio-map-mask = <0xffffffff 0xffffffc0>;
        gpio-map-pass-thru = <0 0x3f>;
        gpio-map
            = <1 0 &gpio0 4 0>      /* D0 */
            , <2 0 &gpio0 5 0>      /* D1 */
            , <3 0 &gpio0 9 0>      /* D2 */
            , <4 0 &gpio0 10 0>      /* D3 */
            , <5 0 &gpio0 15 0>      /* D4 */
            , <6 0 &gpio0 16 0>      /* D5 */
            , <7 0 &gpio0 19 0>      /* D6 */
            , <8 0 &gpio0 31 0>      /* D7 */       /* D10 */
			, <9 0 &gpio1 7 0>
			, <10 0 &gpio1 14 0>
			, <11 0 &gpio1 1 0>
			, <12 0 &gpio1 0 0>
			, <13 0 &gpio1 10 0>
			, <14 0 &gpio1 3 0>
			, <15 0 &gpio1 12 0>
            ;
    };

    kscan0: kscan_matrix {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;	
        diode-direction = "col2row";

         col-gpios
            = <&xiao_d 1 GPIO_ACTIVE_HIGH>
	    , <&xiao_d 5 GPIO_ACTIVE_HIGH>
            , <&xiao_d 9 GPIO_ACTIVE_HIGH>
            , <&xiao_d 7 GPIO_ACTIVE_HIGH>
            , <&xiao_d 10 GPIO_ACTIVE_HIGH>
            , <&xiao_d 11 GPIO_ACTIVE_HIGH>
            , <&xiao_d 12 GPIO_ACTIVE_HIGH>
            ;

        row-gpios
            = <&xiao_d 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&xiao_d 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

	    matrix_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        rows = <5>;
        columns = <4>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                        RC(4,5) RC(4,4) RC(4,3) RC(4,2) RC(4,1) RC(4,0)             
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)                        RC(5,5) RC(5,4) RC(5,3) RC(5,2) RC(5,1) RC(5,0)             
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6)        RC(6,6) RC(6,5) RC(6,4) RC(6,3) RC(6,2) RC(6,1) RC(6,0)
            RC(3,1) RC(3,2)         RC(3,3) RC(3,4) RC(3,5)         RC(3,6)        RC(7,5) RC(7,4) RC(7,3)         RC(7,2) RC(7,1)       
        >;
    };

    kscan1: kscan_joystick_button {
		compatible = "zmk,kscan-gpio-direct";
		wakeup-source;
		toggle-mode;
		input-gpios = <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
		;
	};

	left_encoder: encoder_left {
		compatible = "alps,ec11";
		a-gpios = <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <30>;
		status = "okay";
	};

	right_encoder: encoder_right {
		compatible = "alps,ec11";
		a-gpios = <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio1 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <30>;
		status = "okay";
	};

	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&left_encoder &right_encoder>;
		triggers-per-rotation = <15>;
	};
	
	joystick_listener {
		compatible = "zmk,input-listener";
		device = <&anin0>;
	};

	
};

&adc {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 1, 15)>; // WS2812_VEXT_DATA
        };
    };
    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 1, 15)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <12>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
    };
};

/ {
	anin0: analog_input_0 {
		compatible = "zmk,analog-input";
		sampling-hz = <100>;

		y-ch {
			io-channels = <&adc 0>;
			mv-mid = <1760>;
			mv-min-max = <800>;
			mv-deadzone = <100>;
			scale-multiplier = <1>;
			scale-divisor = <6>;
			evt-type = <INPUT_EV_REL>;
			input-code = <INPUT_REL_Y>;
			report-on-change-only;
		};
		x-ch {
			io-channels = <&adc 1>;
			mv-mid = <1660>;
			mv-min-max = <800>;
			mv-deadzone = <100>;
			scale-multiplier = <1>;
			scale-divisor = <6>;
			evt-type = <INPUT_EV_REL>;
			input-code = <INPUT_REL_X>;
			report-on-change-only;
		};
	};
};

