/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <input/processors.dtsi>
#include "Ed1tor50-layouts.dtsi"
#include <dt-bindings/led/led.h>


&physical_layout0 {
    transform = <&matrix_transform>;
};


/ {
    chosen {
        zmk,kscan = &kscan0;
		zmk,underglow = &led_strip;
		zmk,physical-layout = &physical_layout0;
    };


    kscan0: kscan_matrix {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;	
        diode-direction = "col2row";

         col-gpios
                = <&gpio1 4 GPIO_ACTIVE_HIGH>
                ;

        row-gpios
                = <&gpio0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                , <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                ;
    };

	    matrix_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        rows = <2>;
        columns = <1>;
        map = <
            RC(0,0) RC(0,1)       
        >;
    };

    kscan1: kscan_joystick_button {
		compatible = "zmk,kscan-gpio-direct";
		wakeup-source;
		toggle-mode;
		input-gpios = <&gpio0 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
	};

	left_encoder: encoder_left {
		compatible = "alps,ec11";
		a-gpios = <&gpio0 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <30>;
		status = "okay";
	};

	right_encoder: encoder_right {
		compatible = "alps,ec11";
		a-gpios = <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <30>;
		status = "okay";
	};

	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&left_encoder &right_encoder>;
		triggers-per-rotation = <15>;
	};
	
	joystick_listener {
		compatible = "zmk,input-listener";
		device = <&anin0>;
	};

    &ext_power_4ch {
        compatible = "zmk,ext-power-4ch";
        status = "okay";
        
        // 配置4个通道的GPIO引脚
        channel0-gpios = <&gpio1 11 GPIO_ACTIVE_HIGH>;  // 替换为你的GPIO引脚
        channel1-gpios = <&gpio0 29 GPIO_ACTIVE_HIGH>;
        channel2-gpios = <&gpio0 26 GPIO_ACTIVE_HIGH>;
        channel3-gpios = <&gpio0 06 GPIO_ACTIVE_HIGH>;
        
        init-delay-ms = <50>;
    };

};



&adc {
    status = "okay";
};



&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 9)>; // WS2812_VEXT_DATA
        };
    };
    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 9)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <2>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
    };
};

/ {
	anin0: analog_input_0 {
		compatible = "zmk,analog-input";
		sampling-hz = <100>;

		x-ch {
			io-channels = <&adc 7>;
			mv-mid = <0x7FFF>;
			mv-min-max = <800>;
			mv-deadzone = <50>;
			scale-multiplier = <1>;
			scale-divisor = <6>;
			evt-type = <INPUT_EV_REL>;
			input-code = <INPUT_REL_X>;
			report-on-change-only;
		};
		y-ch {
			io-channels = <&adc 6>;
			mv-mid = <0x7FFF>;
			mv-min-max = <800>;
			mv-deadzone = <50>;
			scale-multiplier = <1>;
			scale-divisor = <6>;
			evt-type = <INPUT_EV_REL>;
			input-code = <INPUT_REL_Y>;
			report-on-change-only;
		};
	};
};

